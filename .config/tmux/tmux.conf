
set -g default-terminal "tmux-256color"
set -ag terminal-overrides ",$TERM:Tc"
set -s escape-time 0
set -g status off

set-option -g focus-events on

unbind C-b
set-option -g prefix ` 
bind-key -r ` send-keys ` 
bind-key C-a send-prefix
set -g status-style 'bg=#000000 fg=#ffffff'

bind-key -r r source-file ~/.config/tmux/tmux.conf

set -g base-index 1

set-window-option -g mode-keys vi

bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?\.?(view|n?vim?x?)(-wrapped)?(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' { if -F '#{pane_at_left}' '' 'select-pane -L' }
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' { if -F '#{pane_at_top}' '' 'select-pane -U' }
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' { if -F '#{pane_at_right}' '' 'select-pane -R' }
bind-key -n 'C-n' if-shell "$is_vim" 'send-keys C-n' { if -F '#{window_end_flag}' '' 'select-window -n' }
bind-key -n 'C-p' if-shell "$is_vim" 'send-keys C-p' { if 'test #{window_index} -gt #{base-index}' 'select-window -p' }

bind-key -T copy-mode-vi 'C-h' if -F '#{pane_at_left}' '' 'select-pane -L'
bind-key -T copy-mode-vi 'C-j' if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind-key -T copy-mode-vi 'C-k' if -F '#{pane_at_top}' '' 'select-pane -U'
bind-key -T copy-mode-vi 'C-l' if -F '#{pane_at_right}' '' 'select-pane -R'
bind-key -T copy-mode-vi 'C-n' if -F '#{window_end_flag}' '' 'select-window -n'
bind-key -T copy-mode-vi 'C-p' if 'test #{window_index} -gt #{base-index}' 'select-window -p'

bind -n 'M-h' if-shell "$is_vim" 'send-keys M-h' 'resize-pane -L 1'
bind -n 'M-j' if-shell "$is_vim" 'send-keys M-j' 'resize-pane -D 1'
bind -n 'M-k' if-shell "$is_vim" 'send-keys M-k' 'resize-pane -U 1'
bind -n 'M-l' if-shell "$is_vim" 'send-keys M-l' 'resize-pane -R 1'

bind-key -T copy-mode-vi M-h resize-pane -L 1
bind-key -T copy-mode-vi M-j resize-pane -D 1
bind-key -T copy-mode-vi M-k resize-pane -U 1
bind-key -T copy-mode-vi M-l resize-pane -R 1


bind -n 'C-M-h' if-shell "$is_vim" 'send-keys C-M-h' 'swap-pane -s "{left-of}"'
bind -n 'C-M-j' if-shell "$is_vim" 'send-keys C-M-j' 'swap-pane -s "{down-of}"'
bind -n 'C-M-k' if-shell "$is_vim" 'send-keys C-M-k' 'swap-pane -s "{up-of}"'
bind -n 'C-M-l' if-shell "$is_vim" 'send-keys C-M-l' 'swap-pane -s "{right-of}"'

bind-key -T copy-mode-vi C-M-h swap-pane -s "{left-of}"
bind-key -T copy-mode-vi C-M-j swap-pane -s "{down-of}"
bind-key -T copy-mode-vi C-M-k swap-pane -s "{up-of}"
bind-key -T copy-mode-vi C-M-l swap-pane -s "{right-of}"


bind-key -r H run-shell "~/.config/tmux/scripts/tmux-sessions.sh /mnt/data/personal/fppk/tt-score-api/"
bind-key -r L run-shell "~/.config/tmux/scripts/tmux-sessions.sh /mnt/data/personal/fppk/tt-score-dashboard/"


bind-key -r b run-shell "~/.config/tmux/scripts/tmux-sessions.sh"
bind-key -r k new-window "NOTE_PATH=/home/notpc/notes ~/.config/tmux/scripts/tmux-kanban.sh"
bind-key -r N run-shell "NOTE_PATH=/home/notpc/notes ~/.config/tmux/scripts/tmux-notes.sh"
bind-key -r g run-shell "~/.config/tmux/scripts/gh-dash.sh"
bind-key -r P run-shell "~/.config/tmux/scripts/posting.sh"
bind-key -r a run-shell "~/.config/tmux/scripts/claude.sh"
bind-key -r A run-shell "~/.config/tmux/scripts/claude-continue.sh"

bind-key -r Q set -g status on
bind-key -r S set -g status off

bind-key -r -T prefix       M-Up              resize-pane -U 5
bind-key -r -T prefix       M-Down            resize-pane -D 5
bind-key -r -T prefix       M-Left            resize-pane -L 5
bind-key -r -T prefix       M-Right           resize-pane -R 5
bind-key -r -T prefix       C-Up              resize-pane -U 10
bind-key -r -T prefix       C-Down            resize-pane -D 10
bind-key -r -T prefix       C-Left            resize-pane -L 10 

bind-key -r = join-pane -t 2 -h
bind-key -r - breakp 


bind v split-window -v -c "#{pane_current_path}"
bind | split-window -h -c "#{pane_current_path}"



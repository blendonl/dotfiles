$mainMod = SUPER
$monitor1 = eDP-1
$monitor2 = HDMI-A-1
$UserScripts = $HOME/.config/hypr/scripts

# Volume
bindl = ,XF86AudioMute, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 0%
bindle=, XF86AudioRaiseVolume, exec, wpctl set-volume -l 1 @DEFAULT_AUDIO_SINK@ 5%+
bindle=, XF86AudioLowerVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%-

# bindl= Super+Shift, N, exec, playerctl next || playerctl position `bc <<< "100 * $(playerctl metadata mpris:length) / 1000000 / 100"`
bindl= ,XF86AudioNext, exec, playerctl next || playerctl position `bc <<< "100 * $(playerctl metadata mpris:length) / 1000000 / 100"`
# bindl= Super+Shift, B, exec, playerctl previous
# bindl= Super+Shift, P, exec, playerctl play-pause
bindl= ,XF86AudioPlay, exec, playerctl play-pause

# Brightness
# Uncomment these if you can't get AGS to work
#bindle=, XF86MonBrightnessUp, exec, brightnessctl set '12.75+'
#bindle=, XF86MonBrightnessDown, exec, brightnessctl set '12.75-'

# Apps: just normal apps
# bind = Super, Return, exec, foot --override shell=fish
#bind = Super, Return, exec, foot --override shell=fish
# bind = Super, E, exec, nautilus --new-window

# Apps: Settings and config
# bind = Super, I, exec, XDG_CURRENT_DESKTOP="gnome" gnome-control-center

# Actions
# bind = Super, Period, exec, pkill fuzzel || ~/.local/bin/fuzzel-emoji
bind = Super SHIFT, C, killactive,
bind = Super+Alt, Space, togglefloating,
bind = Shift+Super+Alt, Q, exec, hyprctl kill
bind = Control+Shift+Alt, Delete, exec, pkill wlogout || wlogout -p layer-shell

# Screenshot, Record, OCR, Color picker, Clipboard history
bind = Super+Shift+Alt, S, exec, grim -g $(slurp) - | swappy -f -
bindl=,Print,exec,grim - | wl-copy
bind = Super+Control, S, exec, ~/.config/ags/scripts/grimblast.sh --freeze copy area
bind = Super+Alt, R, exec, ~/.config/ags/scripts/record-script.sh
bind = Control+Alt, R, exec, ~/.config/ags/scripts/record-script.sh --fullscreen
bind = Super+Shift+Alt, R, exec, ~/.config/ags/scripts/record-script.sh --fullscreen-sound
bind = Super+ALT, P, exec, hyprpicker -a
bind = Super, V, exec, pkill fuzzel || cliphist list | fuzzel --no-fuzzy --dmenu | cliphist decode | wl-copy

# Text-to-image
# Normal
bind = Control+Super+Shift,S,exec,grim -g $(slurp $SLURP_ARGS) "tmp.png" && tesseract "tmp.png" - | wl-copy && rm "tmp.png"

# Media

#Lock screen
bind = Super, Q, exec, loginctl lock-session
bind = Super+Shift, Q, exec, loginctl lock-session
bindl = Super+Shift, Q, exec, sleep 0.1 && systemctl suspend

# App launcher
# bind = Control+Super, Slash, exec, pkill anyrun || anyrun

bindr = Control+Super, R, exec, killall ags ydotool; ags &
bindr = Control+Super+Alt, R, exec, hyprctl reload; killall ags ydotool; ags &
# bind = Control+Super, T, exec, ~/.config/ags/scripts/color_generation/switchwall.sh
# bind = Control+Alt, Slash, exec, ags run-js 'cycleMode();'
bind = Super, R, exec, ags -t 'launcher'
# bind = Super, Tab, exec, ags -t 'overview'
# bind = Super, Slash, exec, ags -t 'cheatsheet'
# bind = Super, B, exec, ags -t 'sideleft'
# bind = Super, A, exec, ags -t 'sideleft'
# bind = Super, O, exec, ags -t 'sideleft'
# bind = Super, N, exec, ags -t 'sideright'
# bind = Super, M, exec, ags run-js 'openMusicControls.value = (!mpris.getPlayer() ? false : !openMusicControls.value);'
# bind = Super, Comma, exec, ags run-js 'openColorScheme.value = true; Utils.timeout(2000, () => openColorScheme.value = false);'
# # bind = Super, K, exec, ags -t 'osk'
# bind = Control+Alt, Delete, exec, ags -t 'session'
# bindle = , XF86AudioRaiseVolume, exec, ags run-js 'indicator.popup(1);'
# bindle = , XF86AudioLowerVolume, exec, ags run-js 'indicator.popup(1);'
# bindle=, XF86MonBrightnessUp, exec, ags run-js 'brightness.screen_value += 0.05; indicator.popup(1);'
# bindle=, XF86MonBrightnessDown, exec, ags run-js 'brightness.screen_value -= 0.05; indicator.popup(1);'
# bindl  = , XF86AudioMute, exec, ags run-js 'indicator.popup(1);'
# bindl  = Super+Shift,M,   exec, ags run-js 'indicator.popup(1);'

# bind = Control+Super, P, exec, hyprctl plugin load "~/.config/hypr/plugins/droidbars.so"
# bind = Control+Super, O, exec, hyprctl plugin unload "~/.config/hypr/plugins/droidbars.so"

# bind = Super+Alt, f12, exec, notify-send "Millis since epoch" "$(date +%s%N | cut -b1-13)" -a 'Hyprland keybind'
bind = Super+Alt, f12, exec, notify-send 'Test notification' "Here's a really long message to test truncation and wrapping\nYou can middle click or flick this notification to dismiss it!" -a 'Shell' -A "Test1=I got it!" -A "Test2=Another action" -t 5000
bind = Super+Alt, Equal, exec, notify-send "Urgent notification" "Ah hell no" -u critical -a 'Hyprland keybind'

# Swap windows
bind = Super+Shift, h, movewindow, l
bind = Super+Shift, l, movewindow, r
bind = Super+Shift, k, movewindow, u
bind = Super+Shift, j, movewindow, d
bind = Super, P, pin
# Move focus
bind = Super, h, movefocus, l
bind = Super, l, movefocus, r
bind = Super, k, movefocus, u
bind = Super, j, movefocus, d

# Workspace, window, tab switch with keyboard
bind = Super, mouse:275, workspace, -1
bind = Super, mouse:276, workspace, +1
# bind = Control+Super, BracketLeft, workspace, -1
# bind = Control+Super, BracketRight, workspace, +1
# bind = Control+Super, up, workspace, -5
# bind = Control+Super, down, workspace, +5
# bind = Super, Page_Down, workspace, +1
# bind = Super, Page_Up, workspace, -1
# bind = Control+Super, Page_Down, workspace, +1
# bind = Control+Super, Page_Up, workspace, -1
# bind = Super+Alt, Page_Down, movetoworkspace, +1
# bind = Super+Alt, Page_Up, movetoworkspace, -1
# bind = Super+Shift, Page_Down, movetoworkspace, +1
# bind = Super+Shift, Page_Up, movetoworkspace, -1
# bind = Control+Super+Shift, Right, movetoworkspace, +1
# bind = Control+Super+Shift, Left, movetoworkspace, -1
# bind = Super+Shift, mouse_down, movetoworkspace, -1
# bind = Super+Shift, mouse_up, movetoworkspace, +1
# bind = Super+Alt, mouse_down, movetoworkspace, -1
# bind = Super+Alt, mouse_up, movetoworkspace, +1

# Window split ratio
binde = Super, Minus, splitratio, -0.1
binde = Super, Equal, splitratio, 0.1
binde = Super, Semicolon, splitratio, -0.1
binde = Super, Apostrophe, splitratio, 0.1

# Fullscreen
bind = Super, F, fullscreen, 0
bind = Super+Alt, F, fakefullscreen, 0

workspace = name:1, monitor:$monitor1 
workspace = name:2, monitor:$monitor1 
workspace = name:3, monitor:$monitor1 
workspace = name:4, monitor:$monitor2
workspace = name:5, monitor:$monitor2
workspace = name:6, monitor:$monitor2

# Switching
bind = Super, 1, workspace, 1
bind = Super, 2, workspace, 2
bind = Super, 3, workspace, 3
bind = Super, 4,  workspace, 4
bind = Super, 5,  workspace, 5
bind = Super, 6,  workspace, 6
bind = Super, 7,  workspace, 7
bind = Super, 8,  workspace, 8
bind = Super, 9,  workspace, 9
bind = Super, 0,  workspace, 10

# Move window to workspace Super + Alt + [0-9]
bind = Super+SHIFT, 1,  movetoworkspace, 1
bind = Super+SHIFT, 2,  movetoworkspace, 2
bind = Super+SHIFT, 3,  movetoworkspace, 3
bind = Super+SHIFT, 4,  movetoworkspace, 4
bind = Super+SHIFT, 5,  movetoworkspace, 5
bind = Super+SHIFT, 6,  movetoworkspace, 6
bind = Super+SHIFT, 7,  movetoworkspace, 7
bind = Super+SHIFT, 8,  movetoworkspace, 8
bind = Super+SHIFT, 9,  movetoworkspace, 9
bind = Super+SHIFT, 0,  movetoworkspace, 10
# bind = Control+Shift+Super, Up, movetoworkspacesilent, special
# bind = Super+Alt, S, movetoworkspacesilent, special

# Scroll through existing workspaces with (Control) + Super + scroll
# bind = Super, mouse_up, workspace, +1
# bind = Super, mouse_down, workspace, -1
# bind = Control+Super, mouse_up, workspace, +1
# bind = Control+Super, mouse_down, workspace, -1

# Move/resize windows with Super + LMB/RMB and dragging
bindm = Super, mouse:272, movewindow
bindm = Super, mouse:273, resizewindow
# bindm = Super, mouse:274, movewindow
bindm = Super, Z, movewindow
bind = Control+Super, Backslash, resizeactive, exact 640 480

# Arrow keys with IJKL
# bindle = Alt, I, exec, ydotool key 103:1 103:0
# bindle = Alt, K, exec, ydotool key 108:1 108:0
# bindle = Alt, J, exec, ydotool key 105:1 105:0
# bindle = Alt, L, exec, ydotool key 106:1 106:0
# # Control + Side mouse btn for switching tabs (Ctrl+PgUp/PgDn)
# bind = Control, mouse:275, exec, ydotool key 29:1 104:1 104:0 29:0
# bind = Control, mouse:276, exec, ydotool key 29:1 109:1 109:0 29:0
#
 bind = Super, Return, exec, alacritty


workspace = special:terminal, gapsout:150, on-created-empty:alacritty
workspace = special:discord, gapsout:150, on-created-empty:discord --ozone-platform-hint=auto
workspace = special:spotify, gapsout:150, on-created-empty:spotify
workspace = special:postman, gapsout:150, on-created-empty:postman
workspace = special:slack, gapsout:150, on-created-empty:slack
workspace = special:browser, gapsout:150, on-created-empty:google-chrome-stable
workspace = name:browser1, on-created-empty:google-chrome-stable
workspace = name:browser2, on-created-empty:google-chrome-stable

workspace = name:terminal1, monitor:$monitor1, on-created-empty:alacritty
workspace = name:terminal2, default:true, monitor:$monitor2, on-created-empty:alacritty

workspace = name:browser1, default: true, monitor:$monitor1, on-created-empty:google-chrome-stable
workspace = name:browser2, monitor:$monitor2, on-created-empty:google-chrome-stable


bind = Super SHIFT, Return, togglespecialworkspace, terminal
bind = Super SHIFT, D, togglespecialworkspace, discord
bind = $mainMod SHIFT, M, togglespecialworkspace, spotify
bind = $mainMod SHIFT, S, togglespecialworkspace, slack 
bind = $mainMod CONTROL, B, togglespecialworkspace, browser 
bind = $mainMod SHIFT, P, togglespecialworkspace, postman 

bind = $mainMod, TAB, swapactiveworkspaces, 0 1

bindle = Alt, I, exec, ydotool key 103:1 103:0
bindle = Alt, K, exec, ydotool key 108:1 108:0
bindle = Alt, J, exec, ydotool key 105:1 105:0
bindle = Alt, L, exec, ydotool key 106:1 106:0
# Control + Side mouse btn for switching tabs (Ctrl+PgUp/PgDn)
bind = Control, mouse:275, exec, ydotool key 29:1 104:1 104:0 29:0
bind = Control, mouse:276, exec, ydotool key 29:1 109:1 109:0 29:0


bind = $mainMod, W, exec, $UserScripts/wallpaper-select.sh 

bind = $mainMod, TAB, swapactiveworkspaces, 0 1

bind = $mainMod SHIFT, I, workspace,name:terminal2
bind = $mainMod, I, workspace,name:terminal1

bind = $mainMod SHIFT, B, workspace,name:browser2
bind = $mainMod, B, workspace,name:browser1